{"ast":null,"code":"/* eslint-disable no-unused-vars */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  user: {},\n  isLoading: true\n};\nexport const getUser = createAsyncThunk(async () => {\n  try {\n    const res = await axios({\n      method: 'get',\n      url: 'http://localhost:5000/authorize'\n    }).data.user;\n    return res;\n  } catch (error) {}\n});\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getUser.pending]: state => {\n      state.isLoading = true;\n    },\n    [getUser.fulfilled]: (state, action) => {\n      state.isLoading;\n    }\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/ambarreinoso/Desktop/projects/repertoire/client/src/features/userSlice.js"],"names":["createAsyncThunk","createSlice","axios","initialState","user","isLoading","getUser","res","method","url","data","error","userSlice","name","reducers","extraReducers","pending","state","fulfilled","action","reducer"],"mappings":"AAAA;AACA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAInBC,EAAAA,SAAS,EAAE;AAJQ,CAArB;AAOA,OAAO,MAAMC,OAAO,GAAGN,gBAAgB,CACrC,YAAY;AACV,MAAI;AACF,UAAMO,GAAG,GAAG,MAAML,KAAK,CAAC;AACtBM,MAAAA,MAAM,EAAE,KADc;AAEtBC,MAAAA,GAAG,EAAE;AAFiB,KAAD,CAAL,CAGfC,IAHe,CAGVN,IAHR;AAIA,WAAOG,GAAP;AACD,GAND,CAME,OAAOI,KAAP,EAAc,CAAE;AACnB,CAToC,CAAhC;AAYP,MAAMC,SAAS,GAAGX,WAAW,CAAC;AAC5BY,EAAAA,IAAI,EAAE,MADsB;AAE5BV,EAAAA,YAF4B;AAG5BW,EAAAA,QAAQ,EAAE,EAHkB;AAI5BC,EAAAA,aAAa,EAAE;AACb,KAACT,OAAO,CAACU,OAAT,GAAoBC,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACZ,SAAN,GAAkB,IAAlB;AACD,KAHY;AAIb,KAACC,OAAO,CAACY,SAAT,GAAqB,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACpCF,MAAAA,KAAK,CAACZ,SAAN;AACH;AANY;AAJa,CAAD,CAA7B;AAcA,eAAeO,SAAS,CAACQ,OAAzB","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport axios from 'axios'\n\nconst initialState = {\n  user: {\n\n  },\n  isLoading: true\n}\n\nexport const getUser = createAsyncThunk(\n  async () => {\n    try {\n      const res = await axios({\n        method: 'get',\n        url: 'http://localhost:5000/authorize'\n      }).data.user\n      return res\n    } catch (error) {}\n  }\n)\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getUser.pending]: (state) => {\n      state.isLoading = true\n    },\n    [getUser.fulfilled]: (state, action) => {\n        state.isLoading\n    }\n  }\n})\n\nexport default userSlice.reducer\n"]},"metadata":{},"sourceType":"module"}